# SimVision Command Script (Thu Aug 26 05:06:04 PM BRT 2010)
#
# Version 06.20.s002
#
# You can restore this configuration with:
#
#     irun -gui -debug -top core_fsm_tb core_fsm_tb.v core_fsm.v core_pcau.v -s -input restore.tcl
#


#
# preferences
#
preferences set waveform-print-variables selected
preferences set txe-locate-add-fibers 1
preferences set signal-type-colors {assertion #FF0000 output #FFA500 group #0099FF inout #00FFFF input #FFFF00 fiber #FF99FF errorsignal #FF0000 unknown #FFFFFF overlay #0099FF internal #00FF00 reference #FFFFFF}
preferences set waveform-print-time range
preferences set txe-navigate-search-locate 0
preferences set txe-view-hold 0
preferences set toolbar-SimControl-WaveWindow {
  usual
  position -anchor e
}
preferences set sb-editor-command kate
preferences set verilog-colors {Su #ff0099 0 {} 1 {} HiZ #ff9900 We #00ffff Pu #9900ff Sm #00ff99 X #ff0000 StrX #ff0000 other #ffff00 Z #ff9900 Me #0000ff La #ff00ff St {}}
preferences set save-state-on-startup 1
preferences set restore-state-on-startup 1
preferences set txe-navigate-waveform-locate 1
preferences set txe-view-hidden 0
preferences set toolbar-UserTB3-WaveWindow {
  usual
  add action_specman_sendto_stripechart
  add action_specman_sendto_databrowser
  position -row 0 -pos 4 -anchor e
  name {Send To Specman}
}
preferences set txe-search-show-linenumbers 1
preferences set toolbar-txe_waveform_toggle-WaveWindow {
  usual
  position -pos 1
}
preferences set toolbar-Windows-SrcBrowser {
  usual
  position -pos 1
}
preferences set print-company {CI Brasil - CT2}
preferences set waveform-print-colors {As shown on screen}
preferences set txe-navigate-waveform-next-child 1
preferences set print-designer {Pedro Fausto}
preferences set vhdl-colors {H #00ffff L #00ffff 0 {} X #ff0000 - {} 1 {} U #9900ff Z #ff9900 W #ff0000}
preferences set txe-locate-scroll-x 1
preferences set txe-locate-scroll-y 1
preferences set txe-locate-pop-waveform 1
preferences set use-signal-type-colors 1

#
# Simulator
#

database require simulator -hints {
	simulator "irun -gui -debug -top core_fsm_tb core_fsm_tb.v core_fsm.v core_pcau.v -s -input restore.tcl"
}

#
# groups
#
catch {group new -name ROM -overlay 0}
catch {group new -name RAM -overlay 0}
catch {group new -name SFR -overlay 0}
catch {group new -name ALU -overlay 0}
catch {group new -name PCAU -overlay 0}

group using ROM
group set -overlay 0
group set -comment {}
group set -parents {}
group set -groups {}
group clear 0 end

group insert \
    {core_fsm_tb.FSM.fsm_pc_i[15:0]} \
    {core_fsm_tb.FSM.fsm_rom_data_i[7:0]} \
    core_fsm_tb.FSM.fsm_rom_rd_o_b

group using RAM
group set -overlay 0
group set -comment {}
group set -parents {}
group set -groups {}
group clear 0 end

group insert \
    {core_fsm_tb.FSM.fsm_ram_addr_o[7:0]} \
    {core_fsm_tb.FSM.fsm_ram_data_o[7:0]} \
    {core_fsm_tb.FSM.fsm_ram_data_i[7:0]} \
    core_fsm_tb.FSM.fsm_ram_rd_o_b \
    core_fsm_tb.FSM.fsm_ram_wr_o_b

group using SFR
group set -overlay 0
group set -comment {}
group set -parents {}
group set -groups {}
group clear 0 end

group insert \
    {core_fsm_tb.FSM.fsm_sfr_addr_o[7:0]} \
    {core_fsm_tb.FSM.fsm_sfr_data_o[7:0]} \
    {core_fsm_tb.FSM.fsm_sfr_data_i[7:0]} \
    core_fsm_tb.FSM.fsm_sfr_rd_o_b \
    core_fsm_tb.FSM.fsm_sfr_wr_o_b

group using ALU
group set -overlay 0
group set -comment {}
group set -parents {}
group set -groups {}
group clear 0 end

group insert \
    {core_fsm_tb.FSM.fsm_alu_op1_o[7:0]} \
    {core_fsm_tb.FSM.fsm_alu_op2_o[7:0]} \
    {core_fsm_tb.FSM.fsm_alu_opcode_o[7:0]} \
    {core_fsm_tb.FSM.fsm_alu_result_i[15:0]} \
    core_fsm_tb.FSM.fsm_bit_byte_flag_o

group using PCAU
group set -overlay 0
group set -comment {}
group set -parents {}
group set -groups {}
group clear 0 end

group insert \
    core_fsm_tb.FSM.fsm_pcau_en_o \
    {core_fsm_tb.FSM.fsm_pcau_offset_o[7:0]}

#
# cursors
#
set time 527840ps
if {[catch {cursor new -name  TimeA -time $time}] != ""} {
    cursor set -using TimeA -time $time
}

#
# mmaps
#
mmap new -reuse -name {Boolean as Logic} -contents {
{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}
}
mmap new -reuse -name {Example Map} -contents {
{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}
}
mmap new -reuse -name rd_wr_o_b -contents {
{%x=1 -label OFF}
{%x=0 -bgcolor white -font -*-courier-medium-r-normal--12-* -label ON -shape bus -textcolor #000000}
}
mmap new -reuse -name {fsm states} -contents {
{%x=0 -bgcolor #ff0000 -font -*-courier-medium-r-normal--12-* -label DC1 -shape bus}
{%x=1 -bgcolor #ff9900 -font -*-courier-medium-r-normal--12-* -label DC2 -shape bus}
{%x=3 -bgcolor #ffff00 -font -*-courier-medium-r-normal--12-* -label EXE -shape bus -textcolor #000000}
{%x=2 -bgcolor #00ffff -font -*-courier-medium-r-normal--12-* -label WBK -shape bus -textcolor #000000}
{%x=4 -bgcolor #9900ff -font -*-courier-medium-r-normal--12-* -label RST -shape bus}
}
mmap new -reuse -name {New map #2} -contents {
{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}
}
mmap new -reuse -name {New map #3} -contents {
%x=
}
mmap new -reuse -name opcode -contents {
{%x=* -bgcolor #ffffff -font -*-courier-bold-r-normal--12-* -label %x -linecolor gray -shape bus -textcolor #000000}
}
mmap new -reuse -name {New map} -contents {
{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}
}

#
# Design Browser windows
#
if {[catch {window new WatchList -name "Design Browser 1" -geometry 700x500+0+22}] != ""} {
    window geometry "Design Browser 1" 700x500+0+22
}
window target "Design Browser 1" on
browser using {Design Browser 1}
browser set \
    -scope simulator::core_fsm_tb \
    -showinternals 0
browser yview see simulator::core_fsm_tb
browser timecontrol set -lock 0

#
# Waveform windows
#
if {[catch {window new WaveWindow -name "Waveform 2" -geometry 1274x915+0+0}] != ""} {
    window geometry "Waveform 2" 1274x915+0+0
}
window target "Waveform 2" on
waveform using {Waveform 2}
waveform sidebar visibility partial
waveform set \
    -primarycursor TimeA \
    -signalnames name \
    -signalwidth 175 \
    -units ps \
    -valuewidth 75
cursor set -using TimeA -time 527,840ps
waveform baseline set -time 0

set id [waveform add -signals [list simulator::core_fsm_tb.FSM.fsm_reset_i_b \
	{simulator::core_fsm_tb.FSM.state[2:0]} \
	simulator::core_fsm_tb.PCAU.pcau_clock_mem_i \
	simulator::core_fsm_tb.FSM.fsm_clock_i ]]
set id [waveform add -signals [list {simulator::core_fsm_tb.FSM.state[2:0]} ]]
waveform format $id -radix {fsm states} -color #000000
set id [waveform add -signals [list {simulator::core_fsm_tb.FSM.fsm_opcode[7:0]} ]]
waveform format $id -radix opcode -color #000000
set id [waveform add -signals [list {simulator::core_fsm_tb.FSM.fsm_op1[7:0]} \
	{simulator::core_fsm_tb.FSM.fsm_op2[7:0]} ]]
set groupId [waveform add -groups ROM]
set glist [waveform hierarchy contents $groupId]
set id [lindex $glist 0]
foreach {name attrs} {
    {simulator::core_fsm_tb.FSM.fsm_pc_i[15:0]} {-color #00ffff}
    {simulator::core_fsm_tb.FSM.fsm_rom_data_i[7:0]} {-color #00ffff}
    simulator::core_fsm_tb.FSM.fsm_rom_rd_o_b {-radix rd_wr_o_b -color #00ffff}
} {
    set expected [ join [waveform signals -format fullpath $id] ]
    if {[string equal $name $expected]} {
        if {$attrs != ""} {
            eval waveform format $id $attrs
        }
    }
        set glist [lrange $glist 1 end]
        set id [lindex $glist 0]
}

set groupId [waveform add -groups RAM]
set glist [waveform hierarchy contents $groupId]
set id [lindex $glist 0]
foreach {name attrs} {
    {simulator::core_fsm_tb.FSM.fsm_ram_addr_o[7:0]} {-color #00ff99}
    {simulator::core_fsm_tb.FSM.fsm_ram_data_o[7:0]} {-color #00ff99}
    {simulator::core_fsm_tb.FSM.fsm_ram_data_i[7:0]} {-color #00ff99}
    simulator::core_fsm_tb.FSM.fsm_ram_rd_o_b {-radix rd_wr_o_b -color #00ff99}
    simulator::core_fsm_tb.FSM.fsm_ram_wr_o_b {-radix rd_wr_o_b -color #00ff99}
} {
    set expected [ join [waveform signals -format fullpath $id] ]
    if {[string equal $name $expected]} {
        if {$attrs != ""} {
            eval waveform format $id $attrs
        }
    }
        set glist [lrange $glist 1 end]
        set id [lindex $glist 0]
}

set groupId [waveform add -groups SFR]
set glist [waveform hierarchy contents $groupId]
set id [lindex $glist 0]
foreach {name attrs} {
    {simulator::core_fsm_tb.FSM.fsm_sfr_addr_o[7:0]} {-color #ffff00}
    {simulator::core_fsm_tb.FSM.fsm_sfr_data_o[7:0]} {-color #ffff00}
    {simulator::core_fsm_tb.FSM.fsm_sfr_data_i[7:0]} {-color #ffff00}
    simulator::core_fsm_tb.FSM.fsm_sfr_rd_o_b {-radix rd_wr_o_b -color #ffff00}
    simulator::core_fsm_tb.FSM.fsm_sfr_wr_o_b {-radix rd_wr_o_b -color #ffff00}
} {
    set expected [ join [waveform signals -format fullpath $id] ]
    if {[string equal $name $expected]} {
        if {$attrs != ""} {
            eval waveform format $id $attrs
        }
    }
        set glist [lrange $glist 1 end]
        set id [lindex $glist 0]
}

set groupId [waveform add -groups ALU]
waveform hierarchy collapse $groupId

set groupId [waveform add -groups PCAU]
set glist [waveform hierarchy contents $groupId]
set id [lindex $glist 0]
foreach {name attrs} {
    simulator::core_fsm_tb.FSM.fsm_pcau_en_o {-color #ff9900}
    {simulator::core_fsm_tb.FSM.fsm_pcau_offset_o[7:0]} {-color #ff9900}
} {
    set expected [ join [waveform signals -format fullpath $id] ]
    if {[string equal $name $expected]} {
        if {$attrs != ""} {
            eval waveform format $id $attrs
        }
    }
        set glist [lrange $glist 1 end]
        set id [lindex $glist 0]
}
waveform hierarchy collapse $groupId

set id [waveform add -signals [list {simulator::core_fsm_tb.FSM.next_state[2:0]} \
	{simulator::core_fsm_tb.FSM.fsm_psw_i[5:0]} ]]

waveform xview limits 0 801000ps

#
# Console window
#
console set -windowname Console
